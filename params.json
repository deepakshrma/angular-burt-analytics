{"name":"Angular Burt Analytics","tagline":"This is a simple angular module which lets you integrate burt analytic tracker in your AngularJS application.","body":"# angular-burt-analytics\r\nThis is a simple angular module which lets you integrate burt analytics tracker in your AngularJS application.\r\n\r\n##How to install using bower\r\n```bash\r\nbower install angular-burt-analytics\r\n```\r\n\r\n##How to use angular-burt-analytics in your angular app\r\nIn Html:\r\n```html\r\n<script src=\"client/bower_components/angular-burt-analytics/js/angular-burt-analytics.js\"></script>\r\n```\r\nIn you angular app config\r\n```javascript\r\n//In start of app, Module(ngBurtAnalytics) injection \r\nangular.module('kokaihop', [\r\n     //... other modules\r\n     'ngBurtAnalytics',\r\n    'ngHelpers'\r\n])\r\n//Provider injection to setup your BurtAnalytics\r\n.config(function ( BurtAnalyticsProvider) {\r\n//setUp will goes here\r\nBurtAnalyticsProvider.setTrackingKey(['xxxx', 'xxx.se']);//TODO: set Burt Analytics key, name values ['xxxx', 'xxx.se']\r\nBurtAnalyticsProvider.setBurtUrl('http://m.burt.io/k/xxxx-se.js');//TODO: set Burt Analytics url value 'http://m.burt.io/k/xxxx-se.js'\r\nBurtAnalyticsProvider.setDomainName('xxx.se');//TODO: set Burt Analytics domain name value 'xxxx.se'\r\nBurtAnalyticsProvider.setCloudKey('xxxx');//TODO: set Burt Analytics setCloudKey value 'xxxx'\r\n});\r\n//Track you event via BurtAnalytics service\r\n//In route change\r\n.run(function ($rootScope, $location, BurtAnalytics) {\r\n$rootScope.$on('$stateChangeSuccess',\r\nfunction (event, toState, toParams, fromState, fromParams) {\r\nBurtAnalytics.trackPage('name', 'scope', 'value'); //simple one\r\nburtAnalytic(toState.name, toParams, $location.$$url);// more complex one\r\n})\r\nfunction burtAnalytic(state, stateParams, url) {\r\n    var params = [];\r\n    params[0] = state;\r\n    switch (state) {\r\n        case \"main.recipe.show\":\r\n            params[1] = 'recipe';\r\n            params[2] = stateParams.friendlyUrl;\r\n            break;\r\n        default :\r\n            params[1] = 'Home'\r\n            params[2] = url;\r\n            break\r\n    }\r\n    BurtAnalytics.trackPage.apply(null, params)\r\n}\r\n})\r\n//In your controller\r\n.controller(function (BurtAnalytics) {\r\nBurtAnalytics.trackPage('name', 'scope', 'value'); //simple one\r\n// we provide offline support to trackPage api. Means if it take too long time to add script.\r\n//We store data on queue whenever api will up. We will send data to burt server.  \r\nvar apiPromise = BurtAnalytics.getApi();\r\n    apiPromise.then(function(api) {\r\n        //do something here\r\n        //raw burt api\r\n        api.annotate('burt.author', 'author', 'Joe');\r\n        //More: http://docs.burt.io/client/tracking/\r\n    }, function(reason) {\r\n      alert('Failed: ' + reason);\r\n    });\r\n})\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}